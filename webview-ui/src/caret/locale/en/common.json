{
	"button": {
		"freeStart": "Start for Free",
		"useOwnKey": "Use Your Own API Key",
		"letsGo": "Let's Go!",
		"save": "Save",
		"cancel": "Cancel",
		"setupApiOrLocal": "Setup My API Key or Local LLM",
		"notifyCaretAccount": "Notify Me for Caret Subscription",
		"saveAndStart": "Save and Start"
	},
	"error": {
		"generic": "An error occurred."
	},
	"imageAlt": {
		"caretBanner": "Caret Logo Banner"
	},
	"title": {
		"apiKeySettings": "API Key Settings"
	},
	"text": {
		"finalThoughts": "Start your amazing development journey with {{appName}}!"
	},
	"link": {
		"learnMoreCaretGit": "Learn more on Caret GitHub"
	},
	"welcome": {
		"title": "Welcome to Caret! ðŸŽ‰",
		"subtitle": "Your AI-powered coding assistant",
		"description": "Caret is an AI coding assistant that helps you write, debug, and improve your code. Let's get started!",
		"getStarted": "Get Started",
		"learnMore": "Learn More"
	},
	"rules": {
		"tab": {
			"rules": "Rules",
			"workflows": "Workflows"
		},
		"section": {
			"personaManagement": "Persona Management",
			"globalRules": "Global Rules",
			"workspaceRules": "Workspace Rules",
			"globalWorkflows": "Global Workflows",
			"localWorkflows": "Local Workflows"
		},
		"subTitle": {
			"caretRules": "Caret Rules (.caretrules)",
			"clineRules": "Cline Rules (.clinerules)",
			"cursorRules": "Cursor Rules (.cursorrules)",
			"windsurfRules": "Windsurf Rules (.windsurfrules)"
		},
		"button": {
			"selectPersonaTemplate": "Select Template Character",
			"changePersonaTemplate": "Change Persona Template"
		},
		"description": {
			"personaManagement": "Choose an AI persona that matches your coding style and preferences.",
			"rulesDescription": "Rules allow you to provide system-level guidance. Think of them as a persistent way to include context and preferences for your projects or globally for every conversation.",
			"workflowsDescription": "Workflows allow you to define a series of steps for Cline to perform repetitive tasks like deploying services or submitting PRs. To run a workflow, type /workflow-name in the chat."
		},
		"action": {
			"newRuleFile": "New rule file..."
		},
		"title": "Cline Rules & Workflow Management",
		"docsLink": "Docs",
		"toggleError": "Rule toggle error"
	},
	"rulesModal": {
		"tooltip.manageRulesWorkflows": "Manage Cline Rules & Workflows",
		"ariaLabel.clineRulesButton": "Cline Rules"
	},
	"mode": {
		"chatbot": {
			"label": "ðŸ’¬ Chatbot",
			"title": "Chatbot Mode",
			"description": "Expert consultation and analysis"
		},
		"agent": {
			"label": "ðŸ¤– Agent",
			"title": "Agent Mode", 
			"description": "Collaborative development and implementation"
		},
		"plan": {
			"label": "ðŸ“‹ Plan",
			"title": "Plan Mode",
			"description": "Strategy formulation and design"
		},
		"act": {
			"label": "âš¡ Act", 
			"title": "Act Mode",
			"description": "Implementation and execution"
		},
		"tooltip": {
			"chatbot": "In Chatbot mode, Caret provides expert consultation and analysis",
			"agent": "In Agent mode, Caret collaborates to implement solutions",
			"plan": "In Plan mode, formulate strategies and plans",
			"act": "In Act mode, execute and implement plans",
			"toggle": "Toggle w/ {{metaKey}}+Shift+A"
		}
	},
	"settings": {
		"openAIReasoningEffort": {
			"high": "High (More detailed, slower, higher cost)",
			"label": "OpenAI Reasoning Effort",
			"description": "Adjust the reasoning effort for OpenAI models. Higher effort may lead to more detailed responses but can be slower and more costly."
		},
		"uiLanguage": {
			"label": "UI Language",
			"description": "Select the display language for the Caret UI.",
			"option": {
				"ko": "Korean (í•œêµ­ì–´)",
				"en": "English",
				"ja": "Japanese (æ—¥æœ¬èªž)",
				"zh": "Chinese (ä¸­æ–‡)"
			}
		},
		"modeSystem": {
			"label": "Interface Mode",
			"description": "Choose your preferred interface style between Caret and Cline modes.",
			"options": {
				"caret": "Caret",
				"cline": "Cline"
			}
		},
		"separateModels": {
			"label": "Use different models for Chatbot and Agent modes",
			"description": "Switching between Chatbot and Agent mode will persist the API and model used in the previous mode. This may be helpful e.g. when using a strong reasoning model for expert consultation (Chatbot) and a cheaper coding model for collaborative development (Agent)."
		}
	}
}
